matrix:
  include:

    # mac_cmake
    #- os: osx
      #env: BUILD_TARGET=mac_cmake
      #language: cpp
     # sudo: required
    #- os: windows
     # env: CMAKE_PATH="/c/Program Files/CMake/bin"
    #  language: cpp
    - os: linux
      env: BUILD_TARGET=linux
      language: cpp

git:
  submodules: false
  
 
script:
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then export PATH=$CMAKE_PATH:$PATH  ; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then 
     echo -e "y" | bash /home/travis/build/Bilalmirza/Test/cocos2d/build/install-deps-linux.sh;
     sudo apt-get update;
     sudo apt-get install ninja-build;
     ninja --version
    ;fi
  - mkdir build && cd build
  - cmake .. -DCMAKE_BUILD_TYPE=Release
  #- echo "$(cat /home/travis/build/Bilalmirza/Test/build/CMakeFiles/CMakeOutput.log)"
  - cmake --build .
 # - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then 
 #   xcodebuild -project /Users/travis/build/Bilalmirza/Test/proj.ios_mac/travis-test.xcodeproj -configuration Release -target "travis-test-desktop" CONFIGURATION_BUILD_DIR="/Users/travis/build/Bilalmirza/Test/bin" | xcpretty 
 #   ; fi
 # - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then export PATH=$CMAKE_PATH:$PATH  ; fi
 # - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then mkdir build && cd build  ; fi
 # - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then cmake ..  ; fi
 # - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then cmake --build .  ; fi
 # - cd bin
 # - zip -r travis.zip travis-test-desktop.app
 # - export OUTPUTDIR=$PWD
 # - export HOCKEY_APP_ID=36131caa01d742e4bcf77917004df486
 # - export HOCKEY_APP_TOKEN=598504c3bbb54916a6bb4e62c34ce683
 # - printenv
 # - curl -F "status=2" -F "notify=1" -F "notes=Some new features and fixed bugs." -F "notes_type=0" -F "ipa=@travis.zip" -H "X-HockeyAppToken:$HOCKEY_APP_TOKEN" https://rink.hockeyapp.net/api/2/apps/$HOCKEY_APP_ID/app_versions/upload
 
