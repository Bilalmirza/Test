matrix:
  include:

    # mac_cmake
 #   - os: osx
#      env: BUILD_TARGET=mac_cmake
#      language: cpp
#      sudo: required
    - os: windows
      env: CMAKE_PATH="/c/Program Files/CMake/bin"
      language: cpp
#   - os: linux
#      dist: xenial
#      env: 
#       - BUILD_TARGET=linux 
#        - GEN_BINDING_AND_COCOSFILE=true
#        - secure: Xn48eX1TD6DAPcVPU+a+CD3b/BKGVCHk555zl8rZiLq4GH4rWSES23rKcY8uz/X9GizETWYQK2luNvph4/BA29XEZ7l+Q0V9AZwrahWPzCuDBgxSPAr4KlETGM9I3xEvRIKBeddko7JTFHZCcNsItPRA0CovndQzdKE6texm13A=
#        - secure: M31OQaUIBV13aUMylPs2PieKThGs+ED0tj9SKbCKGKxwojl+N2ZhlS53D4Zqoj1ru/3P1X0pPeYvV0uVfM2dpEwRF4BmYVZQSrOKgjK1VfbcN5luWSeuAvq0LNGT99Ao02sKLbcHINiQ4axylPPgsY6+X/aoJNuKqBTQyaaVAo8=
#        - secure: M5lyDs0qai15mWHzJdkh0WPfVJJmVZu6SWtYULxatukGPXVwoQvmEtYAwAW+iz6aM+tXksQ/mk6nW5L8UFbHm+n6yrsa5bZU9sGXjilPE8p8bLFYDmIbPRazU+E6pBP3J2CDoAm0XnWkiYQ8feTxKTo6ysLnHAEjyaHTw0+Q1GM=
#      language: cpp

git:
  submodules: false
  
before_install:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then export BITBUCKET_USER_NAME=Bilalmirza  ; fi 
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then export BITBUCKET_USER_PASSWORD=aq95XJzDD6NRAnx28uDX  ; fi 
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then echo -e "machine bitbucket.org\n  login $BITBUCKET_USER_NAME\n  password $BITBUCKET_USER_PASSWORD" >~/.netrc  ; fi 
#  - echo -e "machine bitbucket.org\n  login Bilalmirza\n  password aq95XJzDD6NRAnx28uDX" >~/.netrc
  - git submodule update --init --recursive
script:
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then export PATH=$CMAKE_PATH:$PATH  ; fi
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then set HOME=%cd%  ; fi 
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then echo machine bitbucket.org > _netrc  ; fi 
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then echo login Bilalmirza >> _netrc  ; fi 
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then echo password aq95XJzDD6NRAnx28uDX >> _netrc  ; fi 
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then type _netrc ; fi 
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then 
     echo -e "y" | bash /home/travis/build/Bilalmirza/Test/cocos2d/build/install-deps-linux.sh;
     sudo apt-get update;
     sudo apt-get install ninja-build;
     ninja --version
    ;fi
  - git submodule add --depth 1 -- https://bitbucket.org/weRplay/explottens
  - mkdir build && cd build
  - xcodebuild -project /Users/travis/build/Bilalmirza/Test/explottens/explottens/proj.ios_mac/Explottens.xcodeproj -configuration Release -scheme "explottens-desktop" CONFIGURATION_BUILD_DIR="/Users/travis/build/Bilalmirza/Test/bin" | xcpretty 
#  - cmake ..
#  - echo "$(cat /home/travis/build/Bilalmirza/Test/build/CMakeFiles/CMakeOutput.log)"
#  - cmake --build .
 #  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then 
#    xcodebuild -project /Users/travis/build/Bilalmirza/Test/explottens/explottens/proj.ios_mac/Explottens.xcodeproj -configuration Release -scheme "explottens-desktop" CONFIGURATION_BUILD_DIR="/Users/travis/build/Bilalmirza/Test/bin" | xcpretty 
#    ;fi
 # - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then export PATH=$CMAKE_PATH:$PATH  ; fi
 # - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then mkdir build && cd build  ; fi
 # - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then cmake ..  ; fi
 # - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then cmake --build .  ; fi
 # - cd bin
  - cd /Users/travis/build/Bilalmirza/Test/bin
  - zip -r explottens.zip explottens.app
  - export OUTPUTDIR=$PWD
  - export HOCKEY_APP_ID=36131caa01d742e4bcf77917004df486
  - export HOCKEY_APP_TOKEN=78e4b791cd8e47e789b6d127f1c5a883
  - printenv
  - curl -F "status=2" -F "notify=1" -F "notes=Some new features and fixed bugs." -F "notes_type=0" -F "ipa=@explottens.zip" -H "X-HockeyAppToken:$HOCKEY_APP_TOKEN" https://rink.hockeyapp.net/api/2/apps/$HOCKEY_APP_ID/app_versions/upload
 
